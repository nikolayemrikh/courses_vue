{"filter":false,"title":"task.js","tooltip":"/db/dao/task.js","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":133,"column":1},"action":"insert","lines":["var Task = require('../models/task');","var Course = require('../models/course');","module.exports = {","    add: function(args, callback) {","        if (!args.courseId) callback(new Error(\"courseId required\"))","        Course.findOne({","            courseId: args.courseId","        }).populate(\"tasks\", \"taskId\").exec(function(err, course) {","            if (err || !course) return callback(err);","            for (var i = 0; i < course.tasks.length; i++) {","                var task = course.tasks[i];","                if (args.data.number == task.taskId) callback(new Error(\"Задание с таким номером уже существует в курсе\"));","            }","","            course.save(function(err) {","                if (err) return callback(err);","                var task = new Task({","                    taskId: args.data.number,","                    courseId: args.courseId,","                    course: course._id,","                    isChallenge: args.data.isChallenge,","                    taskName: args.data.taskName,","                    taskDescription: args.data.taskDescription","                });","                console.log(task)","                task.save(function(err, task) {","                    if (err) return callback(err);","                    course.tasks.push(task);","                    course.save(function(err) {","                        if (err) return callback(err);","                        callback(null, task);","                    });","                });","            });","        });","    },","    list: function(args, callback) {","        if (args.courseId) {","            Course.findOne({","                courseId: args.courseId","            }).populate(\"tasks\").sort({\"taskId\": 1}).exec(function(err, course) {","                console.log(course)","                if (err) return callback(err);","                callback(null, course.tasks)","            });","        }","        else {","            Task.find({}).sort({","                \"taskId\": 1","            }).exec(callback);","        }","    },","    getTask: function(args, callback) {","        if (!args.courseId) {","            Task.findById(args.taskId).exec(callback);","        }","        else {","            Task.findOne({","                courseId: args.courseId,","                taskId: args.taskId","            }).exec(callback);","        }","    },","    update: function(args, callback) {","        var data = args.data || {};","        /*Course.findOne({","            courseId: args.data.courseId","        }).populate(\"tasks\", \"taskId\").exec(function(err, course) {","            if (err) return callback(err);","            var taskIds = course.tasks.map(function(task) {","                return task.taskId;","            })","            if (taskIds.indexOf(args.data.taskId) != -1) return callback(new Error(\"Задание с таким номером уже существует\"));","        });","        Task.findOneAndUpdate({","            _id: args._id","        }, {","            '$set': data","        }, {","            'new': true","        }, function(err, task) {","            if (err) return callback(err);","            callback(null, task);","            //task.save();","        });*/","        Task.findById(args._id, function(err, task) {","            if (err) return callback(err);","            Course.findOne({","                courseId: args.data.courseId","            }).populate(\"tasks\", \"taskId\").exec(function(err, course) {","                if (err) return callback(err);","                var taskIds = course.tasks.map(function(task) {","                    return task.taskId;","                });","                if (task.taskId != args.data.taskId && taskIds.indexOf(args.data.taskId) != -1) return callback(new Error(\"Задание с таким номером уже существует в курсе\"));","                Task.findOneAndUpdate({","                    _id: args._id","                }, {","                    '$set': data","                }, {","                    'new': true","                }, function(err, task) {","                    if (err) return callback(err);","                    callback(null, task);","                    //task.save();","                });","            });","        });","    },","    delete: function(args, callback) {","        if (!args.courseId) callback(new Error(\"courseId required\"));","        Course.findOne({","            courseId: args.courseId","        }).populate(\"tasks\", \"taskId\").exec(function(err, course) {","            if (err || !course) return callback(err);","            course.save(function(err) {","                if (err) return callback(err);","                for (var i = 0; i < course.tasks.length; i++) {","                    if (course.tasks[i].taskId == args.taskId) course.tasks.splice(i, 1);","                }","                Task.findOneAndRemove({","                    courseId: args.courseId,","                    taskId: args.taskId","                }).exec(function(err, task) {","                    if (err) return callback(err);","                    course.save(function(err) {","                        if (err) return callback(err);","                        callback(null, task);","                    });","                });","            });","        });","    }","}"],"id":1}],[{"start":{"row":17,"column":38},"end":{"row":17,"column":44},"action":"remove","lines":["number"],"id":2},{"start":{"row":17,"column":38},"end":{"row":17,"column":39},"action":"insert","lines":["t"]}],[{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"insert","lines":["a"],"id":3}],[{"start":{"row":17,"column":40},"end":{"row":17,"column":41},"action":"insert","lines":["s"],"id":4}],[{"start":{"row":17,"column":41},"end":{"row":17,"column":42},"action":"insert","lines":["k"],"id":5}],[{"start":{"row":17,"column":38},"end":{"row":17,"column":42},"action":"remove","lines":["task"],"id":6},{"start":{"row":17,"column":38},"end":{"row":17,"column":44},"action":"insert","lines":["taskId"]}],[{"start":{"row":11,"column":30},"end":{"row":11,"column":36},"action":"remove","lines":["number"],"id":7},{"start":{"row":11,"column":30},"end":{"row":11,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":31},"end":{"row":11,"column":32},"action":"insert","lines":["a"],"id":8}],[{"start":{"row":11,"column":32},"end":{"row":11,"column":33},"action":"insert","lines":["s"],"id":9}],[{"start":{"row":11,"column":33},"end":{"row":11,"column":34},"action":"insert","lines":["k"],"id":10}],[{"start":{"row":11,"column":34},"end":{"row":11,"column":35},"action":"insert","lines":["I"],"id":11}],[{"start":{"row":11,"column":35},"end":{"row":11,"column":36},"action":"insert","lines":["d"],"id":12}]]},"ace":{"folds":[],"scrolltop":142.5,"scrollleft":0,"selection":{"start":{"row":11,"column":36},"end":{"row":11,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1486245753934,"hash":"ddbc7727db09fa48b2db4d4f05d44fba443e8ce9"}